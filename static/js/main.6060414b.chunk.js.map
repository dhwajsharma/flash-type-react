{"version":3,"sources":["components/TryAgain/TryAgain.jsx","components/ChallengeDetailsCard/ChallengeDetailsCard.jsx","components/TestLetter/TestLetter.jsx","components/TypingChallenge/TypingChallenge.jsx","components/TypingChallengeContainer/TypingChallengeContainer.jsx","components/TestContainer/TestContainer.jsx","components/ChallengeSection/ChallengeSection.jsx","components/Footer/Footer.jsx","assets/flash.png","components/Landing/Landing.jsx","assets/logo.png","components/Nav/Nav.jsx","App.jsx","index.js"],"names":["TryAgain","words","characters","wpm","startAgain","className","Button","onClick","variant","color","window","open","ChallengeDetailsCard","cardName","cardValue","TestLetter","individualLetterInfo","statusClass","correct","incorrect","notAttempted","status","testLetter","TypingChallenge","timeRemaining","timerStarted","testInfo","onInputChange","map","index","onChange","e","target","value","placeholder","TypingChallengeContainer","selectedParagraph","TestContainer","data-aos","ChallengeSection","Footer","href","rel","Landing","options","strings","autoStart","loop","src","flash","alt","Nav","logo","URL","DefaultState","App","state","fetchNewParagraph","fetch","then","response","text","data","split","selectedLetter","setState","startTimer","timer","setInterval","timeSpent","parseInt","clearInterval","handlerUserInput","inputValue","length","slice","isMistake","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6060414b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./TryAgain.css\";\r\n\r\nconst TryAgain = ({ words, characters, wpm, startAgain }) => {\r\n  return (\r\n    <div className=\"try-again\">\r\n      <h1>Test Results</h1>\r\n\r\n      <div className=\"result-container\">\r\n        <p>\r\n          <b>Characters: </b> {characters}\r\n        </p>\r\n        <p>\r\n          <b>Words: </b> {words}\r\n        </p>\r\n        <p>\r\n          <b>wpm: </b> {wpm}\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          onClick={() => startAgain()}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className=\"end-buttons\"\r\n        >\r\n          Retry\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://twitter.com/intent/tweet?text=cool enough?\",\r\n              \"Twitter\",\r\n              \"width=800,height=600\"\r\n            );\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"end-buttons\"\r\n        >\r\n          Tweet\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TryAgain;\r\n","import React from \"react\";\r\nimport \"./ChallengeDetailsCard.css\";\r\n\r\nconst ChallengeDetailsCard = ({ cardName, cardValue }) => {\r\n  return (\r\n    <div className=\"details-card-container\">\r\n      <div className=\"card-name\">{cardName}</div>\r\n      <div className=\"card-value\">{cardValue}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengeDetailsCard;\r\n","import React from \"react\";\r\nimport \"./TestLetter.css\";\r\n\r\nconst TestLetter = ({ individualLetterInfo }) => {\r\n  const { status } = individualLetterInfo;\r\n\r\n  const statusClass = {\r\n    correct: \"test-letter-correct\",\r\n    incorrect: \"test-letter-incorrect\",\r\n    notAttempted: \"test-letter-not-attempted\",\r\n  }[status];\r\n\r\n  return (\r\n    <span className={`test-letter ${statusClass}`}>\r\n      {individualLetterInfo.testLetter}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TestLetter;\r\n","import React from \"react\";\r\nimport TestLetter from \"../TestLetter/TestLetter\";\r\nimport \"./TypingChallenge.css\";\r\n\r\nconst TypingChallenge = ({\r\n  timeRemaining,\r\n  timerStarted,\r\n  testInfo,\r\n  onInputChange,\r\n}) => {\r\n  return (\r\n    <div className=\"typing-challenge\">\r\n      <div className=\"timer-container\">\r\n        <p className=\"timer\">\r\n          00:\r\n          {timeRemaining >= 10 ? timeRemaining : `0${timeRemaining}`}\r\n        </p>\r\n        <p className=\"timer-info\">{!timerStarted && \"Start typing\"}</p>\r\n      </div>\r\n      <div className=\"textarea-container\">\r\n        <div className=\"textarea-left\">\r\n          <div className=\"textarea test-paragraph\">\r\n            {testInfo.map((individualLetterInfo, index) => {\r\n              return (\r\n                <TestLetter\r\n                  key={index}\r\n                  individualLetterInfo={individualLetterInfo}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"textarea-right\">\r\n          <textarea\r\n            onChange={(e) => onInputChange(e.target.value)}\r\n            className=\"textarea\"\r\n            placeholder=\"Start typing here\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingChallenge;\r\n","import React from \"react\";\r\nimport ChallengeDetailsCard from \"../ChallengeDetailsCard/ChallengeDetailsCard\";\r\nimport TypingChallenge from \"../TypingChallenge/TypingChallenge\";\r\nimport \"./TypingChallengeContainer.css\";\r\n\r\nconst TypingChallengeContainer = ({\r\n  selectedParagraph,\r\n  words,\r\n  characters,\r\n  wpm,\r\n  timeRemaining,\r\n  timerStarted,\r\n  testInfo,\r\n  onInputChange,\r\n}) => {\r\n  return (\r\n    <div className=\"typing-challenge-container\">\r\n      <div className=\"details-container\">\r\n        <ChallengeDetailsCard cardName=\"Words\" cardValue={words} />\r\n        <ChallengeDetailsCard cardName=\"Characters\" cardValue={characters} />\r\n        <ChallengeDetailsCard cardName=\"Wpm\" cardValue={wpm} />\r\n      </div>\r\n\r\n      {/* The real challenge */}\r\n      <div className=\"typewriter-container\">\r\n        <TypingChallenge\r\n          testInfo={testInfo}\r\n          timeRemaining={timeRemaining}\r\n          timerStarted={timerStarted}\r\n          selectedParagraph={selectedParagraph}\r\n          onInputChange={onInputChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingChallengeContainer;\r\n","import React from \"react\";\r\nimport TryAgain from \"../TryAgain/TryAgain\";\r\nimport TypingChallengeContainer from \"../TypingChallengeContainer/TypingChallengeContainer\";\r\nimport \"./TestContainer.css\";\r\n\r\nconst TestContainer = ({\r\n  selectedParagraph,\r\n  words,\r\n  characters,\r\n  wpm,\r\n  timeRemaining,\r\n  timerStarted,\r\n  testInfo,\r\n  onInputChange,\r\n  startAgain,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"test-container\">\r\n        {timeRemaining > 0 ? (\r\n          <div data-aos=\"fade-up\" className=\"typing-challenge-container\">\r\n            <TypingChallengeContainer\r\n              timerStarted={timerStarted}\r\n              timeRemaining={timeRemaining}\r\n              words={words}\r\n              characters={characters}\r\n              wpm={wpm}\r\n              selectedParagraph={selectedParagraph}\r\n              testInfo={testInfo}\r\n              onInputChange={onInputChange}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"try-again-container\">\r\n            <TryAgain\r\n              words={words}\r\n              characters={characters}\r\n              wpm={wpm}\r\n              startAgain={startAgain}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestContainer;\r\n","import React from \"react\";\r\nimport TestContainer from \"../TestContainer/TestContainer\";\r\nimport \"./ChallengeSection.css\";\r\n\r\nconst ChallengeSection = ({\r\n  selectedParagraph,\r\n  words,\r\n  characters,\r\n  wpm,\r\n  timeRemaining,\r\n  timerStarted,\r\n  testInfo,\r\n  onInputChange,\r\n  startAgain,\r\n}) => {\r\n  return (\r\n    <div className=\"challenge-section-container\">\r\n      <h1 data-aos=\"fade-down\" className=\"challenge-section-header\">\r\n        Take a speed test now!\r\n      </h1>\r\n      <TestContainer\r\n        selectedParagraph={selectedParagraph}\r\n        timeRemaining={timeRemaining}\r\n        timerStarted={timerStarted}\r\n        words={words}\r\n        characters={characters}\r\n        wpm={wpm}\r\n        testInfo={testInfo}\r\n        onInputChange={onInputChange}\r\n        startAgain={startAgain}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengeSection;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <a\r\n        target=\"_blank\"\r\n        className=\"footer-link\"\r\n        href=\"https://github.com/dhwajsharma\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        Made by Dhwaj Sharma\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/flash.96e141d3.png\";","import React from \"react\";\r\nimport \"./Landing.css\";\r\nimport flash from \"../../assets/flash.png\";\r\nimport Typewriter from \"typewriter-effect\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <div data-aos=\"fade-up-right\" className=\"landing-left\">\r\n        <h1 className=\"landing-header\">Can you type...</h1>\r\n        <div className=\"typewriter-container\">\r\n          <Typewriter\r\n            options={{\r\n              strings: [\"Fast?\", \"Correct?\", \"Quick?\"],\r\n              autoStart: true,\r\n              loop: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div data-aos=\"fade-up-left\" className=\"landing-right\">\r\n        <img className=\"flash-image\" src={flash} alt=\"hero\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/logo.904ac8fd.png\";","import React from \"react\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"nav-left\">\r\n        <img src={logo} className=\"flash-logo\" alt=\"logo\" />\r\n        <p className=\"flash-logo-text\">FlashType</p>\r\n      </div>\r\n      <div className=\"nav-right\">\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"nav-github-link\"\r\n          href=\"https://github.com/dhwajsharma/flash-type-react\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          GitHub\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport ChallengeSection from \"./components/ChallengeSection/ChallengeSection\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Landing from \"./components/Landing/Landing\";\r\nimport Nav from \"./components/Nav/Nav\";\r\n\r\nconst TotalTime = 60;\r\nconst URL = \"http://metaphorpsum.com/paragraphs/1/9\";\r\nconst DefaultState = {\r\n  selectedParagraph: \"\",\r\n  timerStarted: false,\r\n  timeRemaining: TotalTime,\r\n  words: 0,\r\n  characters: 0,\r\n  wpm: 0,\r\n  testInfo: [],\r\n};\r\nclass App extends React.Component {\r\n  state = DefaultState;\r\n\r\n  fetchNewParagraph = () => {\r\n    fetch(URL)\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        // Once the api results are here, break the selectedParagraph into test info\r\n        const selectedParagraphArray = data.split(\"\");\r\n        const testInfo = selectedParagraphArray.map((selectedLetter) => {\r\n          return {\r\n            testLetter: selectedLetter,\r\n            status: \"notAttempted\",\r\n          };\r\n        });\r\n\r\n        // Update the testInfo in state\r\n        this.setState({\r\n          ...DefaultState,\r\n          selectedParagraph: data,\r\n          testInfo,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchNewParagraph();\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.setState({ timerStarted: true });\r\n    const timer = setInterval(() => {\r\n      if (this.state.timeRemaining > 0) {\r\n        // Change the WPM and Time Remaining\r\n        const timeSpent = TotalTime - this.state.timeRemaining;\r\n        const wpm =\r\n          timeSpent > 0 ? (this.state.words / timeSpent) * TotalTime : 0;\r\n        this.setState({\r\n          timeRemaining: this.state.timeRemaining - 1,\r\n          wpm: parseInt(wpm),\r\n        });\r\n      } else {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  startAgain = () => this.fetchNewParagraph;\r\n\r\n  handlerUserInput = (inputValue) => {\r\n    const characters = inputValue.length;\r\n    const words = inputValue.split(\" \").length;\r\n    const index = characters - 1;\r\n\r\n    if (!this.state.timerStarted) {\r\n      this.startTimer();\r\n\r\n      if (index < 0) {\r\n        this.setState({\r\n          testInfo: [\r\n            {\r\n              testLetter: this.state.testInfo[0].testLetter,\r\n              status: \"notAttempted\",\r\n            },\r\n            ...this.state.testInfo.slice(1),\r\n          ],\r\n          characters,\r\n          words,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (index >= this.state.selectedParagraph.length) {\r\n      this.setState({ characters, words });\r\n      return;\r\n    }\r\n\r\n    //Making a copy of testInfo\r\n    const testInfo = this.state.testInfo;\r\n    if (!(index == this.state.selectedParagraph.length - 1))\r\n      testInfo[index + 1].status = \"Not Attempted\";\r\n\r\n    //Checking for the correct typed letter\r\n    const isMistake = inputValue[index] == testInfo[index].testLetter;\r\n\r\n    //Updating the testInfo\r\n    testInfo[index].status = isMistake ? \"correct\" : \"incorrect\";\r\n\r\n    //Update the state\r\n    this.setState({\r\n      testInfo,\r\n      words,\r\n      characters,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <Landing />\r\n        <ChallengeSection\r\n          selectedParagraph={this.state.selectedParagraph}\r\n          words={this.state.words}\r\n          characters={this.state.characters}\r\n          wpm={this.state.wpm}\r\n          timeRemaining={this.state.timeRemaining}\r\n          timerStarted={this.state.timerStarted}\r\n          testInfo={this.state.testInfo}\r\n          onInputChange={this.handlerUserInput}\r\n          startAgain={this.startAgain}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}